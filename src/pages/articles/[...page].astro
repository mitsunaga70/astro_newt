---
import { newtClient } from "../../libs/newt";
import Layout from "../../layouts/Layout.astro";
import Paging from "../../components/Paging.astro";
import { Image } from "astro:assets";
import Container from "../../components/Container.astro";
import PageBody from "../../components/PageBody.astro";
import PageTitle from "../../components/PageTitle.astro";
import TagList from "../../components/TagList.astro";
export async function getStaticPaths({ paginate }) {
  const postsData = await newtClient.getContents({
    appUid: "blog",
    modelUid: "article",
    query: {
      select: ["_id", "title", "slug", "body", "coverImage", "tags"],
      order: ["-_priority", "-_sys.customOrder"],
    },
  });
  const postsContents = postsData.items;
  return paginate(postsContents, { pageSize: 6 });
}
const { page } = Astro.props;
---

<Layout>
  <PageTitle ja="BLOG" />
  <PageBody>
    <Container>
      <TagList />
      <ul class="list">
        {
          page.data.map((article) => {
            return (
              <li>
                <a href={`/articles/${article.slug}`}>
                  <figure>
                    <Image
                      src={article.coverImage.src}
                      width={338 * 2}
                      height={225 * 2}
                      alt={article.title}
                    />
                  </figure>
                  <div class="body">
                    <ul class="tag_list">
                      {article.tags &&
                        article.tags.map((tag) => {
                          return <li class="tag_item">{tag.name}</li>;
                        })}
                    </ul>
                    <h3>{article.title}</h3>

                    <p class="more">詳細を見る</p>
                  </div>
                </a>
              </li>
            );
          })
        }
      </ul>
      <Paging page={page} name="articles" />
    </Container>
  </PageBody>
</Layout>

<style lang="scss">
  .list {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
    row-gap: 60px;
    &::before,
    &::after {
      content: "";
      display: block;
      width: 31.5%;
      order: 1;
    }
    li {
      flex-basis: 31.5%;
      &:not(:nth-last-of-type(-n + 3)) {
      }
    }
    a {
      display: flex;
      flex-direction: column;
      height: 100%;
      @include bp(pc) {
        figure {
          overflow: hidden;
        }
        img {
          transition: 0.3s ease-out;
        }
        &:hover {
          img {
            transform: scale(1.15);
          }
        }
      }
    }
    figure {
      @include vw(h, 230);
      max-height: 230px;
      border: 1px solid #ddd;
      flex-shrink: 0;
      img {
        width: 100%;
        display: block;
        height: 100%;
        object-fit: cover;
        object-position: bottom;
      }
    }
    h3 {
      font-size: 2.2rem;

      line-height: 1.5;
      height: 100%;
    }
    .more {
      background-color: $text-color;
      color: $white;
      width: 100%;
      text-align: center;
      padding: 0.5em 1.5em;
      margin-inline: auto;
      margin-top: 1em;
      font-size: 1.8rem;
    }
    .body {
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      height: 100%;
      margin-top: 2.2rem;
    }
    .tag_list {
      display: flex;
      flex-wrap: wrap;
      white-space: nowrap;
      gap: 10px;
      margin-bottom: 0.8rem;
    }
    .tag_item {
      border: 1px solid;
      border-radius: 5px;
      padding: 0.5em 0.5em;
      line-height: 1;
      font-size: 1.3rem;
      width: fit-content;
      flex: 0;
    }
  }
</style>
