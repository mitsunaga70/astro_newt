---
import Layout from "../../layouts/Layout.astro";
import { newtClient } from "../../libs/newt";
import type { Article } from "../../libs/newt";
import Container from "../../components/Container.astro";
import Button from "../../components/Button.astro";
import { Image } from "astro:assets";
import PageBody from "../../components/PageBody.astro";
export const getStaticPaths = async () => {
  const { items: news } = await newtClient.getContents<Article>({
    appUid: "news",
    modelUid: "article",
    query: {
      select: ["_id", "title", "_sys", "slug", "body"],
    },
  });
  return news.map((newsItem) => ({
    params: { id: newsItem._id },
    props: { newsItem },
  }));
};

const { newsItem } = Astro.props;
const newsPrev = await newtClient.getFirstContent<Article>({
  appUid: "news",
  modelUid: "article",
  query: {
    select: ["_id", "title"],
    order: ["-_sys.customOrder"],
    "_sys.customOrder": {
      lt: newsItem._sys.customOrder,
    },
  },
});
const newsNext = await newtClient.getFirstContent<Article>({
  appUid: "news",
  modelUid: "article",
  query: {
    select: ["_id", "title"],
    order: ["_sys.customOrder"],
    "_sys.customOrder": {
      gt: newsItem._sys.customOrder,
    },
  },
});
---

<Layout>
  <PageBody>
    <Container value="small">
      <div class="blog-single">
        <h1>{newsItem.title}</h1>
        <article set:html={newsItem.body} />

        <div class="article-footer">
          {
            newsPrev && (
              <a href={"/news/" + newsPrev._id} class="prev">
                前の記事へ
              </a>
            )
          }
          <Button text="一覧に戻る" link="/news/" />

          {
            newsNext && (
              <a href={"/news/" + newsNext._id} class="next">
                次の記事へ
              </a>
            )
          }
        </div>
      </div>
    </Container>
  </PageBody>
</Layout>

<style lang="scss">
  h1 {
    font-size: 3.8rem;
    margin-bottom: 60px;
  }
  .cover {
    width: 100%;
    margin-inline: auto;
    margin-bottom: 60px;
    img {
      display: block;
      width: 100%;
    }
  }
  .blog-single {
    :global(p) {
      &:not(:last-child) {
        margin-bottom: 1em;
      }
    }
  }
  .article-footer {
    display: flex;
    align-items: center;
    margin-top: 60px;
    position: relative;
    :global(.button) {
      margin-top: 0;
    }

    .prev,
    .next {
      display: flex;
      align-items: center;
      gap: 10px;
      @include pCenter(y);
      @include bp(pc) {
        transition: 0.3s;
        &:hover {
          color: $red;
        }
      }
      &::before,
      &::after {
        display: block;
        margin-top: -5px;
      }
    }
    .next {
      right: 0;
      &::after {
        content: ">";
      }
    }
    .prev {
      left: 0;
      &::before {
        content: "<";
      }
    }
  }
</style>
